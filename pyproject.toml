[tool.ruff]
target-version = "py311"
line-length = 110

[tool.ruff.lint]
select = []
ignore = ["ANN401", "ARG002", "ARG005", "C90", "D100", "D101", "D102", "D104", "D105", "D107", "D200", "D202", "D207", "D208", "D212", "E501", "EM101", "EM102", "ERA001", "FA", "FBT001", "FBT002", "FIX002", "I001", "PERF203", "PLR09", "PLR2004", "Q000", "S101", "S113", "SIM105", "T201", "TD002", "W293"]
extend-select = ["UP", "I", "S", "B", "ALL"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.extend-per-file-ignores]
"tests/**" = ["ANN", "ARG", "ASYNC", "BLE001", "D", "DTZ", "E722", "FBT003", "INP001", "N", "PGH003", "PLC", "PLR2004", "PLW0603", "PLW1641", "RET", "RUF012", "RUF100", "S104", "S105", "S106", "S108", "S113", "S324", "S603", "S607", "S608", "SLF", "TRY003", "TRY301"]
"**/tests/**" = ["ANN", "ARG", "ASYNC", "BLE001", "D", "DTZ", "E722", "FBT003", "INP001", "N", "PGH003", "PLC", "PLR2004", "PLW0603", "PLW1641", "RET", "RUF012", "RUF100", "S104", "S105", "S106", "S108", "S113", "S324", "S603", "S607", "S608", "SLF", "TRY003", "TRY301"]
"**/test_*.py" = ["ANN", "ARG", "ASYNC", "BLE001", "D", "DTZ", "E722", "FBT003", "INP001", "N", "PGH003", "PLC", "PLR2004", "PLW0603", "PLW1641", "RET", "RUF012", "RUF100", "S104", "S105", "S106", "S108", "S113", "S324", "S603", "S607", "S608", "SLF", "TRY003", "TRY301"]
"**/*_test.py" = ["ANN", "ARG", "ASYNC", "BLE001", "D", "DTZ", "E722", "FBT003", "INP001", "N", "PGH003", "PLC", "PLR2004", "PLW0603", "PLW1641", "RET", "RUF012", "RUF100", "S104", "S105", "S106", "S108", "S113", "S324", "S603", "S607", "S608", "SLF", "TRY003", "TRY301"]

[tool.pytest.ini_options]
testpaths = ["c2cgeoform/tests"]

[tool.poetry]
exclude = ["c2cgeoform/static/node_modules/**"]
version = "0.0.0"

[tool.poetry.plugins."paste.app_factory"]
main = "c2cgeoform:main"

[tool.poetry.plugins."pyramid.scaffold"]
c2cgeoform = "c2cgeoform.scaffolds:C2cgeoformTemplate"

[tool.poetry.dependencies]
python = ">=3.11,<3.14"
babel = "2.17.0"

colanderalchemy = "0.3.4"
deform = "2.0.15"
geoalchemy2 = "0.18.0"
geojson = "3.2.0"
lingua = "4.15.0"
psycopg2 = { version = "2.9.10", optional = true }
psycopg2-binary = { version = "2.9.10", optional = true }
pyramid = "2.0.2"
pyramid-beaker = "0.9"
pyramid-chameleon = "0.3"
pyramid-jinja2 = "2.10.1"
pyproj = "3.7.2"
shapely = "2.1.2"
sqlalchemy = "2.0.43"
zope-sqlalchemy = "4.0"
requests = "2.32.5"

[tool.poetry.group.dev.dependencies]
prospector = { version = "1.17.3", extras = [
  "with-bandit",
  "with-mypy",
  "with-pyroma", "with_ruff", "with_pyroma"
] }
prospector-profile-duplicated = "1.10.5"
prospector-profile-utils = "1.26.5"
webtest = "3.0.6"
sphinx = "8.2.3"
sphinx-rtd-theme = "3.0.2"
types-requests = "2.32.4.20250913"
pytest = "8.4.2"
cookiecutter = "2.6.0"

[tool.poetry.extras]
psycopg2 = ["psycopg2"]
psycopg2-binary = ["psycopg2-binary"]

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
pattern = "^(?P<base>\\d+(\\.\\d+)*)"
format-jinja = """
{%- if env.get("VERSION_TYPE") == "default_branch" -%}
{{serialize_pep440(bump_version(base, 1), dev=distance)}}
{%- elif env.get("VERSION_TYPE") == "stabilization_branch" -%}
{{serialize_pep440(bump_version(base, 2), dev=distance)}}
{%- elif distance == 0 -%}
{{serialize_pep440(base)}}
{%- else -%}
{{serialize_pep440(bump_version(base), dev=distance)}}
{%- endif -%}
"""

[tool.poetry-plugin-tweak-dependencies-version]
default = "present"

[project]
classifiers = [
    'Framework :: Pyramid',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Programming Language :: Python :: 3.13',
    'Topic :: Internet :: WWW/HTTP',
    'Topic :: Internet :: WWW/HTTP :: WSGI :: Application',
    'Typing :: Typed',
]
dynamic = ["dependencies", "version"]
name = "c2cgeoform"
description = "c2cgeoform"
readme = "README.md"
keywords = ["web", "wsgi", "bfg", "pylons", "pyramid"]
authors = [{name = "Camptocamp",email = "info@camptocamp.com"}]
packages = [{ include = "c2cgeoform" }]
include = [
  "c2cgeoform/py.typed",
  "c2cgeoform/scaffolds/c2cgeoform/**",
  "c2cgeoform/templates/**",
  "c2cgeoform/static/**",
  "c2cgeoform/static/dist/*",
]
requires-python = ">=3.11"
dependencies = ["babel", "colanderalchemy", "deform", "geoalchemy2", "geojson", "lingua", "pyramid", "pyramid-beaker", "pyramid-chameleon", "pyramid-jinja2", "pyproj", "shapely", "sqlalchemy", "zope-sqlalchemy", "requests"]

[project.urls]
repository = "https://github.com/camptocamp/c2cgeoform"
"Bug Tracker" = "https://github.com/camptocamp/c2cgeoform/issues"

[project.optional-dependencies]
psycopg2 = ["psycopg2"]
psycopg2-binary = ["psycopg2-binary"]

[build-system]
requires = [
  "poetry-core>=1.0.0",
  "poetry-dynamic-versioning",
]
build-backend = "poetry.core.masonry.api"
