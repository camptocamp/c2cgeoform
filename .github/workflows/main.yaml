name: Continuous integration

on:
  push:

env:
  HAS_SECRETS: ${{ secrets.HAS_SECRETS }}

jobs:
  main:
    name: Continuous integration
    runs-on: ubuntu-22.04
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v4

      - name: Install packages
        run: sudo apt-get install --yes gettext libgeos-dev

      - name: Install c2cciutils
        run: |
          echo "${HOME}/.local/bin" >> ${GITHUB_PATH}
          python3 -m pip install --user --requirement=ci/requirements.txt

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: "pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}\npre-commit-"
      - run: pre-commit run --all-files
        env:
          SKIP: poetry-lock
      - run: git diff && false
        if: failure()

      - name: Environment information
        run: c2cciutils-env

      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Build
        run: make build

      - name: Lint
        run: make check

      - name: Tests
        run: make test

      - name: Documentation
        run: make docs

      - name: Docker compose logs
        run: |
          c2cciutils-docker-logs
          docker-compose down -v --remove-orphans
        if: always()
      - uses: camptocamp/initialise-gopass-summon-action@v2
        with:
          ci-gpg-private-key: ${{secrets.CI_GPG_PRIVATE_KEY}}
          github-gopass-ci-token: ${{secrets.GOPASS_CI_GITHUB_TOKEN}}
          patterns: pypi
        if: env.HAS_SECRETS == 'HAS_SECRETS'

      - name: Publish
        run: c2cciutils-publish
        if: env.HAS_SECRETS == 'HAS_SECRETS'
